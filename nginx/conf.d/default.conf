# ============================================================================
# DJANGO LOGISTICS TEMPLATE - NGINX SERVER CONFIGURATION
# ============================================================================

# Upstream servers
upstream django_web {
    least_conn;
    server web:8000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream django_websocket {
    ip_hash;
    server websocket:8001 max_fails=3 fail_timeout=30s;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

# Main server block (HTTP - redirect to HTTPS)
server {
    listen 80;
    server_name logistics.local api.logistics.local;
    
    # Health check endpoint
    location /health/ {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main server block (HTTPS)
server {
    listen 443 ssl http2;
    server_name logistics.local api.logistics.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/logistics.crt;
    ssl_certificate_key /etc/nginx/ssl/logistics.key;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Real-IP $remote_addr;
    add_header X-Forwarded-For $proxy_add_x_forwarded_for;
    add_header X-Forwarded-Proto $scheme;
    
    # Root directory for static files
    root /var/www;
    
    # Max file upload size
    client_max_body_size 100M;
    
    # Logging
    access_log /var/log/nginx/logistics.access.log main;
    error_log /var/log/nginx/logistics.error.log warn;
    
    # Static files
    location /static/ {
        alias /var/www/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Compression for static files
        location ~* \.(css|js)$ {
            gzip_static on;
        }
    }
    
    # Media files
    location /media/ {
        alias /var/www/media/;
        expires 30d;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
        
        # Security for uploads
        location ~* \.(php|py|pl|sh|cgi)$ {
            deny all;
        }
    }
    
    # Health check
    location /health/ {
        access_log off;
        proxy_pass http://django_web;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API endpoints
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;
        
        proxy_pass http://django_web;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Keep connections alive
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
    
    # Authentication endpoints (stricter rate limiting)
    location ~ ^/api/(auth|token)/ {
        limit_req zone=login burst=5 nodelay;
        limit_conn conn_limit_per_ip 5;
        
        proxy_pass http://django_web;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # WebSocket connections
    location /ws/ {
        proxy_pass http://django_websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # Disable buffering for WebSocket
        proxy_buffering off;
    }
    
    # Admin interface
    location /admin/ {
        # Restrict access by IP (uncomment and configure as needed)
        # allow 192.168.1.0/24;
        # deny all;
        
        proxy_pass http://django_web;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Flower monitoring (if enabled)
    location /flower/ {
        # Restrict access
        auth_basic "Flower Monitoring";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://flower:5555;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Remove trailing slash
        rewrite ^/flower/(.*)$ /$1 break;
    }
    
    # Django app (catch-all)
    location / {
        proxy_pass http://django_web;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(ini|conf|yaml|yml)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Monitoring server for internal use
server {
    listen 8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 172.20.0.0/16;
        deny all;
    }
}
