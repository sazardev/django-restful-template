# Generated by Django 4.2.7 on 2025-06-14 16:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationChannelModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "channel_type",
                    models.CharField(
                        choices=[
                            ("web", "Web"),
                            ("email", "Email"),
                            ("sms", "Sms"),
                            ("push", "Push"),
                            ("websocket", "Websocket"),
                            ("slack", "Slack"),
                            ("webhook", "Webhook"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de canal",
                    ),
                ),
                (
                    "channel_identifier",
                    models.CharField(
                        max_length=255, verbose_name="Identificador del canal"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Verificado"),
                ),
                (
                    "settings",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Configuraciones"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado"),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Último uso"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_channels",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Canal de notificación",
                "verbose_name_plural": "Canales de notificación",
                "db_table": "notification_channels",
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplateModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nombre"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("success", "Success"),
                            ("urgent", "Urgent"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "title_template",
                    models.CharField(
                        max_length=255, verbose_name="Plantilla de título"
                    ),
                ),
                (
                    "message_template",
                    models.TextField(verbose_name="Plantilla de mensaje"),
                ),
                (
                    "default_priority",
                    models.IntegerField(
                        choices=[
                            (1, "Low"),
                            (2, "Normal"),
                            (3, "High"),
                            (4, "Urgent"),
                            (5, "Critical"),
                        ],
                        default=2,
                        verbose_name="Prioridad por defecto",
                    ),
                ),
                (
                    "default_channels",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Canales por defecto"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plantilla de notificación",
                "verbose_name_plural": "Plantillas de notificación",
                "db_table": "notification_templates",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Título")),
                ("message", models.TextField(verbose_name="Mensaje")),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("success", "Success"),
                            ("urgent", "Urgent"),
                        ],
                        default="info",
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[
                            (1, "Low"),
                            (2, "Normal"),
                            (3, "High"),
                            (4, "Urgent"),
                            (5, "Critical"),
                        ],
                        default=2,
                        verbose_name="Prioridad",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Datos adicionales"
                    ),
                ),
                ("is_read", models.BooleanField(default=False, verbose_name="Leído")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado"),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Leído en"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Expira en"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creado por",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificación",
                "verbose_name_plural": "Notificaciones",
                "db_table": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationDeliveryModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "delivery_data",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Datos de entrega"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Mensaje de error"),
                ),
                (
                    "attempts",
                    models.PositiveIntegerField(default=0, verbose_name="Intentos"),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Enviado en"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Entregado en"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado"),
                ),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="notifications.notificationchannelmodel",
                        verbose_name="Canal",
                    ),
                ),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="notifications.notificationmodel",
                        verbose_name="Notificación",
                    ),
                ),
            ],
            options={
                "verbose_name": "Entrega de notificación",
                "verbose_name_plural": "Entregas de notificación",
                "db_table": "notification_deliveries",
            },
        ),
        migrations.AddIndex(
            model_name="notificationmodel",
            index=models.Index(
                fields=["user", "-created_at"], name="notificatio_user_id_611c58_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationmodel",
            index=models.Index(fields=["status"], name="notificatio_status_fce6f5_idx"),
        ),
        migrations.AddIndex(
            model_name="notificationmodel",
            index=models.Index(
                fields=["notification_type"], name="notificatio_notific_19df93_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationmodel",
            index=models.Index(
                fields=["is_read"], name="notificatio_is_read_3f8c44_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationmodel",
            index=models.Index(
                fields=["expires_at"], name="notificatio_expires_66996e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationdeliverymodel",
            index=models.Index(fields=["status"], name="notificatio_status_ab0dcc_idx"),
        ),
        migrations.AddIndex(
            model_name="notificationdeliverymodel",
            index=models.Index(
                fields=["sent_at"], name="notificatio_sent_at_1c9053_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationdeliverymodel",
            index=models.Index(
                fields=["delivered_at"], name="notificatio_deliver_557785_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="notificationdeliverymodel",
            unique_together={("notification", "channel")},
        ),
        migrations.AddIndex(
            model_name="notificationchannelmodel",
            index=models.Index(
                fields=["user", "channel_type"], name="notificatio_user_id_63b800_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationchannelmodel",
            index=models.Index(
                fields=["is_active"], name="notificatio_is_acti_8498e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationchannelmodel",
            index=models.Index(
                fields=["is_verified"], name="notificatio_is_veri_5252c1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="notificationchannelmodel",
            unique_together={("user", "channel_type", "channel_identifier")},
        ),
    ]
