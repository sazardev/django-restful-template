# Generated by Django 4.2.7 on 2025-06-14 15:48

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email único del usuario",
                        max_length=254,
                        unique=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Username único del usuario",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Username solo puede contener letras, números y @/./+/-/_",
                                regex="^[\\w.@+-]+$",
                            )
                        ],
                        verbose_name="Username",
                    ),
                ),
                ("first_name", models.CharField(max_length=150, verbose_name="Nombre")),
                (
                    "last_name",
                    models.CharField(max_length=150, verbose_name="Apellido"),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Número de teléfono inválido",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Teléfono",
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, null=True, verbose_name="Dirección"),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Ciudad"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="Código de país ISO 3166-1 alpha-2",
                        max_length=2,
                        null=True,
                        verbose_name="País",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="users/avatars/",
                        verbose_name="Avatar",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("super_admin", "Super Admin"),
                            ("logistics_manager", "Logistics Manager"),
                            ("fleet_manager", "Fleet Manager"),
                            ("auction_manager", "Auction Manager"),
                            ("driver", "Driver"),
                            ("client", "Client"),
                        ],
                        default="client",
                        max_length=20,
                        verbose_name="Rol",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("pending_verification", "Pending Verification"),
                        ],
                        default="pending_verification",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "is_email_verified",
                    models.BooleanField(default=False, verbose_name="Email verificado"),
                ),
                (
                    "email_verification_token",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Token de verificación de email",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de actualización"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="custom_user_set",
                        related_query_name="custom_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="custom_user_set",
                        related_query_name="custom_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "db_table": "users_user",
                "ordering": ["-created_at"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nombre"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_groups",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creado por",
                    ),
                ),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True, to="auth.permission", verbose_name="Permisos"
                    ),
                ),
            ],
            options={
                "verbose_name": "Grupo de usuarios",
                "verbose_name_plural": "Grupos de usuarios",
                "db_table": "users_usergroup",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de nacimiento"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Femenino"),
                            ("O", "Otro"),
                            ("N", "Prefiero no decir"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Género",
                    ),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Empresa"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Cargo"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("es", "Español"),
                            ("en", "Inglés"),
                            ("fr", "Francés"),
                        ],
                        default="es",
                        max_length=10,
                        verbose_name="Idioma",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="America/Mexico_City",
                        max_length=50,
                        verbose_name="Zona horaria",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notificaciones por email"
                    ),
                ),
                (
                    "push_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notificaciones push"
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(
                        default=False, verbose_name="Notificaciones por SMS"
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Última actividad"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Dirección IP"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="User Agent"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de actualización"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil de usuario",
                "verbose_name_plural": "Perfiles de usuario",
                "db_table": "users_userprofile",
            },
        ),
        migrations.CreateModel(
            name="UserGroupMembership",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "joined_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de ingreso"
                    ),
                ),
                (
                    "is_admin",
                    models.BooleanField(
                        default=False, verbose_name="Es administrador del grupo"
                    ),
                ),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="group_memberships_added",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Agregado por",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.usergroup",
                        verbose_name="Grupo",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Membresía de grupo",
                "verbose_name_plural": "Membresías de grupo",
                "db_table": "users_usergroupmembership",
                "ordering": ["-joined_at"],
                "unique_together": {("user", "group")},
            },
        ),
        migrations.AddField(
            model_name="usergroup",
            name="users",
            field=models.ManyToManyField(
                related_name="custom_groups",
                through="users.UserGroupMembership",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Usuarios",
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_user_email_6f2530_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["username"], name="users_user_usernam_65d164_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="users_user_role_36d76d_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["status"], name="users_user_status_07d06d_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["created_at"], name="users_user_created_cf865c_idx"
            ),
        ),
    ]
